[{"/Users/katerynarodina/Documents/mern/github-finder/src/index.js":"1","/Users/katerynarodina/Documents/mern/github-finder/src/reportWebVitals.js":"2","/Users/katerynarodina/Documents/mern/github-finder/src/App.js":"3","/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Navbar.js":"4","/Users/katerynarodina/Documents/mern/github-finder/src/components/users/UserItem.js":"5","/Users/katerynarodina/Documents/mern/github-finder/src/components/users/Users.js":"6","/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Spinner.js":"7","/Users/katerynarodina/Documents/mern/github-finder/src/components/users/Search.js":"8","/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Alert.js":"9","/Users/katerynarodina/Documents/mern/github-finder/src/components/pages/About.js":"10","/Users/katerynarodina/Documents/mern/github-finder/src/components/users/User.js":"11","/Users/katerynarodina/Documents/mern/github-finder/src/components/repos/Repos.js":"12","/Users/katerynarodina/Documents/mern/github-finder/src/components/repos/RepoItem.js":"13"},{"size":219,"mtime":1608610761054,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608609676269,"results":"16","hashOfConfig":"15"},{"size":3352,"mtime":1609022470536,"results":"17","hashOfConfig":"15"},{"size":636,"mtime":1608835566879,"results":"18","hashOfConfig":"15"},{"size":584,"mtime":1608996056643,"results":"19","hashOfConfig":"15"},{"size":710,"mtime":1608817065026,"results":"20","hashOfConfig":"15"},{"size":279,"mtime":1608819198563,"results":"21","hashOfConfig":"15"},{"size":1347,"mtime":1609005238015,"results":"22","hashOfConfig":"15"},{"size":342,"mtime":1608832717776,"results":"23","hashOfConfig":"15"},{"size":268,"mtime":1608835167202,"results":"24","hashOfConfig":"15"},{"size":3076,"mtime":1609018582964,"results":"25","hashOfConfig":"15"},{"size":288,"mtime":1609005167768,"results":"26","hashOfConfig":"15"},{"size":359,"mtime":1609003779599,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1g8ph1t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/Users/katerynarodina/Documents/mern/github-finder/src/index.js",[],["59","60"],"/Users/katerynarodina/Documents/mern/github-finder/src/reportWebVitals.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/App.js",["61"],"/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Navbar.js",["62"],"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom';\n\nconst Navbar = ({icon, title}) =>  {\n    return (\n        <nav className='navbar bg-primary'>\n            <h4><i className={icon}></i> {title}</h4> \n            <ul>\n                <li><Link to='/'>Home</Link></li>\n                <li><Link to='/about'>About</Link></li>\n            </ul>\n        </nav>\n    )\n}\nNavbar.defaultProps = {\n    title: 'Github Finder',\n    icon: 'fab fa-github'\n};\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired\n};\n\nexport default Navbar\n","/Users/katerynarodina/Documents/mern/github-finder/src/components/users/UserItem.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/users/Users.js",["63"],"import React, { Component } from 'react'\nimport UserItem from './UserItem'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\n\n\nconst Users = ({users, loading}) => {\n    if (loading){\n        return (<Spinner></Spinner>)\n    } else {\n        return (\n            <div style={usersStyle}>\n                {users.map(user => (\n                    <UserItem key={user.id} user={user}></UserItem>\n                ))}\n            </div>\n            )\n    }\n}\n\nconst usersStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nUsers.propTypes = {\n    users: PropTypes.array.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default Users;\n","/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Spinner.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/users/Search.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/layout/Alert.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/pages/About.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/users/User.js",["64"],"import React, { Fragment, useEffect } from 'react'\nimport Spinner from '../layout/Spinner'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport {Repos} from '../repos/Repos'\n\nconst User = ({user, loading, getUser, getUserRepos, match, repos}) => {\n    const {\n        name,\n        avatar_url, \n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers, \n        following, \n        public_repos,\n        public_gists,\n        company,\n        hireable   \n    } = user;\n    useEffect(() => {\n        getUser(match.params.login)\n        getUserRepos(match.params.login)\n    }, []);\n    if (loading) return <Spinner />  \n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>Back to search</Link>\n            Hireable: {' '}\n                {(hireable) ? <i className=\"fas fa-check text-success\" /> : <i className=\"fas fa-times-circle text-danger\" />}\n                <div className='card grid-2'>\n                    <div className=\"all-center\">\n                        <img src={avatar_url} className='round-img' alt='' style={{'width': '150px'}}/>\n                        <h1> {name} </h1>\n                        <p>Location: {location}</p>\n                    </div>\n                    <div>\n                        {bio && (<Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>)}\n                        <a href={html_url} className='btn btn-dark my-1'>Visit Github profile</a>\n                        <ul>\n                            <li>\n                                {login && <Fragment>\n                                    <strong>Username: </strong> {login}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {blog && <Fragment>\n                                    <strong>Website: </strong> {blog}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {company && <Fragment>\n                                    <strong>Company: </strong> {company}\n                                    </Fragment>}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className='card text-center'>\n                    <div className='badge badge-danger'>Followers: {followers}</div>\n                    <div className='badge badge-success'>Following: {following}</div>\n                    <div className='badge badge-light'>Public repos: {public_repos}</div>\n                    <div className='badge badge-dark'>Public gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos}/>\n        </Fragment>\n    )\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n}\n\nexport default User\n","/Users/katerynarodina/Documents/mern/github-finder/src/components/repos/Repos.js",[],"/Users/katerynarodina/Documents/mern/github-finder/src/components/repos/RepoItem.js",["65"],"import React from 'react';\nimport PropTypes from 'prop-types';\n \nconst RepoItem = ({repo}) => {\n    return (\n        <div className='card'>\n            <h3>\n                <a href={repo.html_url} target='_blank'>{repo.name}</a>\n            </h3>\n        </div>\n    )\n}\n\nRepoItem.propTypes = {\n    repo: PropTypes.object.isRequired\n}\n\nexport default RepoItem;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":21,"column":13,"nodeType":"72","endLine":27,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"77","line":26,"column":8,"nodeType":"78","endLine":26,"endColumn":10,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":8,"column":41,"nodeType":"82","endLine":8,"endColumn":56},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getUser', 'getUserRepos', and 'match.params.login'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["85"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getUser, getUserRepos, match.params.login]",{"range":"88","text":"89"},[641,643],"[getUser, getUserRepos, match.params.login]"]